name: Continuous Deployment

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose --version

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t volttechafrica/flexdeskbackend:latest .

      - name: Push Docker image to Docker Hub
        run: docker push volttechafrica/flexdeskbackend:latest

      - name: Set up Environment Variables
        run: |
          cat <<EOF > .env
          DB_CONNECTION_STRING=${{ secrets.DB_CONNECTION_STRING }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }}
          JWT_REFRESH_EXPIRATION=${{ secrets.JWT_REFRESH_EXPIRATION }}
          REDIS_HOST=${{ secrets.REDIS_HOST }}
          REDIS_PORT=${{ secrets.REDIS_PORT }}
          REDIS_USER=${{ secrets.REDIS_USER }}
          REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
          EMAIL_USER=${{ secrets.EMAIL_USER }}
          EMAIL_HOST=${{ secrets.EMAIL_HOST }}
          EMAIL_PORT=${{ secrets.EMAIL_PORT }}
          EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}
          DATADOG_API_KEY=${{ secrets.DATADOG_API_KEY }}
          DATADOG_APP_KEY=${{ secrets.DATADOG_APP_KEY }}
          DD_AGENT_PORT=${{ secrets.DD_AGENT_PORT }}
          PORT=8000
          NODE_ENV=production
          NODE_NO_WARNINGS=1
          ENV=production
          EOF

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: af-south-1

      - name: Deploy to EC2
        run: |
            aws ssm send-command \
              --document-name "AWS-RunShellScript" \
              --region af-south-1 \
              --instance-ids ${{ secrets.EC2_INSTANCE_ID }} \
              --parameters 'commands=[
                "mkdir -p /home/ubuntu/flexdeskBackend"
              ]' \
              --comment "Prepare directory for Flexdesk files"

            aws ssm send-command \
              --document-name "AWS-RunShellScript" \
              --region af-south-1 \
              --instance-ids ${{ secrets.EC2_INSTANCE_ID }} \
              --parameters 'commands=["cat > /home/ubuntu/flexdeskBackend/.env <<EOF\n'"$(<.env)"'\nEOF"]' \
              --comment "Transfer .env"

            aws ssm send-command \
              --document-name "AWS-RunShellScript" \
              --region af-south-1 \
              --instance-ids ${{ secrets.EC2_INSTANCE_ID }} \
              --parameters 'commands=["cat > /home/ubuntu/flexdeskBackend/docker-compose.yaml <<EOF\n'"$(<docker-compose.yaml)"'\nEOF"]' \
              --comment "Transfer docker-compose.yaml"

            aws ssm send-command \
              --document-name "AWS-RunShellScript" \
              --region af-south-1 \
              --instance-ids ${{ secrets.EC2_INSTANCE_ID }} \
              --parameters 'commands=["cd /home/ubuntu/flexdeskBackend","docker-compose pull","docker-compose down","docker-compose up -d"]' \
              --comment "Start Docker services"
